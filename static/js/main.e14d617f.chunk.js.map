{"version":3,"sources":["config/theme.ts","config/apiClient.ts","config/fetcher.ts","store/AppSlice.ts","store/index.ts","components/Providers/Providers.tsx","config/routes.ts","components/Pages/Home.tsx","components/Pages/MarketsList.tsx","components/Pages/CategoryProductsList.tsx","components/Router/Router.tsx","components/App/AppBar.tsx","components/App/Sidebar.tsx","components/App/AppDialog.tsx","components/App/App.tsx","index.tsx"],"names":["baseTheme","createMuiTheme","theme","responsiveFontSizes","apiClient","axios","create","baseURL","paramsSerializer","params","qs","stringify","arrayFormat","fetcher","url","get","then","response","data","appSlice","createSlice","name","initialState","isSideBarOpen","isDialogOpen","show","dialogMsg","asyncLoading","asyncError","reducers","asyncStart","state","asyncSuccess","payload","actions","appSelector","appStore","getMarkets","dispatch","getstate","a","token","postalcode","postalCode","status","markets","error","message","setData","marketSelected","getProducts","category_id","getState","company_id","id","products","store","configureStore","reducer","appSliceReducer","Providers","children","CssBaseline","routes","home","marketList","marketId","productList","categoryProductList","InputButton","styled","div","margin","padding","border","display","width","borderRadius","boxShadow","CustomButton","Button","height","CustomGrid","Grid","CustomCardMedia","CardMedia","backgroundSize","Home","history","useHistory","useDispatch","useState","setPostalCode","useEffect","container","justify","direction","alignItems","item","sm","xs","Typography","variant","TextField","label","required","inputProps","minLength","maxLength","onChange","event","target","value","color","disabled","length","onClick","push","className","image","window","screen","title","ImgContainer","justifyContent","CustomCard","Card","minHeight","flexDirection","Container","ProgressGrid","MarketList","useSelector","showMarketCategories","market","marketCategories","shortcut","cards","document","getElementsByClassName","Array","from","forEach","element","style","currentTarget","align","paragraph","spacing","services","map","lg","md","alt","src","logotype","CardContent","delivery","alignContent","CircularProgress","CategoryGrid","CategoryTypography","borderBottom","ProductsGrid","CustomCardContent","paddingTop","CategoryProductsList","location","useLocation","prodcutView","category","items","Avatar","icon","description","dialogTitle","CardActionArea","picture","price","categories","Router","exact","path","to","CustomToolbar","Toolbar","MarketAvatar","AppBar","setInputColor","position","background","startIcon","InputLabel","htmlFor","city","toUpperCase","Input","defaultValue","checkValidity","CustomList","List","CustomListItem","ListItem","Content","CustomTypography","lineHeight","paddingLeft","CustomAvatar","CustomDrawer","Drawer","CustomListItemText","ListItemText","SideBar","open","setOpen","category__","setCategory","subcategory__","setSubcategory","showProducts","category_name","subcategory_name","subcategory_id","console","log","Promise","resolve","res","categoryProducts","onClose","backgroundColor","setHeaderFontColor","role","disableRipple","button","primary","ExpandLess","Divider","Collapse","in","timeout","unmountOnExit","disablePadding","Check","subcategory","AppDialog","closeDialog","undefined","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","App","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.e14d617f.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\r\n// import { Ubuntu } from './fonts/ubuntu-fonts';\r\n\r\nconst baseTheme = createMuiTheme({});\r\nconst theme = responsiveFontSizes(baseTheme);\r\n\r\nexport default theme;\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'https://api.comprea.com/v7',\r\n    paramsSerializer: params => qs.stringify(params, { arrayFormat: 'comma' }),\r\n});\r\n\r\nexport default apiClient;\r\n","import { AxiosRequestConfig } from 'axios';\r\nimport apiClient from './apiClient';\r\n\r\nexport const fetcher = <T>(\r\n    url: string,\r\n    params?: AxiosRequestConfig['params']\r\n): Promise<T> =>\r\n    apiClient\r\n        .get<T>(url, { params })\r\n        .then(response => response.data);\r\n\r\nexport default fetcher;\r\n","import { fetcher } from 'config/fetcher';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk } from './';\r\nimport {\r\n    CategoriesResponse,\r\n    AppDialogProps,\r\n    MarketModel,\r\n    CityMarketsModel,\r\n    PostalCodeResponse,\r\n    Products,\r\n    CategoryProductsResponse,\r\n    ProductsResponse,\r\n    SessionTokenResponse,\r\n} from 'models/main';\r\n\r\ninterface AppData {\r\n    postalCode?: number;\r\n    token?: string;\r\n    isSideBarOpen: boolean;\r\n    markets?: CityMarketsModel;\r\n    isDialogOpen: AppDialogProps;\r\n    marketCategories?: CategoriesResponse;\r\n    marketSelected?: MarketModel;\r\n    products?: Products;\r\n    categoryProducts?: CategoryProductsResponse;\r\n}\r\n\r\nexport interface AppState {\r\n    data: AppData;\r\n    asyncLoading: boolean;\r\n    asyncError: string;\r\n}\r\n\r\nconst initialState: AppState = {\r\n    data: {\r\n        isSideBarOpen: false,\r\n        isDialogOpen: { show: false, dialogMsg: '' },\r\n    },\r\n    asyncLoading: false,\r\n    asyncError: '',\r\n};\r\n\r\nconst appSlice = createSlice({\r\n    name: 'app',\r\n    initialState,\r\n    reducers: {\r\n        asyncStart: state => ({\r\n            ...state,\r\n            asyncLoading: true,\r\n        }),\r\n        asyncSuccess: (\r\n            state,\r\n            { payload }: PayloadAction<{ [key: string]: any }>\r\n        ) => ({\r\n            ...state,\r\n            asyncLoading: false,\r\n            data: {\r\n                ...state.data,\r\n                ...payload,\r\n            },\r\n        }),\r\n        asyncError: (state, { payload }: PayloadAction<string>) => ({\r\n            ...state,\r\n            asyncLoading: false,\r\n            asyncError: payload,\r\n        }),\r\n    },\r\n});\r\n\r\nexport const { asyncStart, asyncSuccess, asyncError } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n\r\nexport const appSelector = (state: { appStore: AppState }) => state.appStore;\r\n\r\nexport const getToken = (): AppThunk => {\r\n    return async dispatch => {\r\n        dispatch(asyncStart());\r\n\r\n        try {\r\n            const data: SessionTokenResponse = await fetcher('/user/session');\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        token: data.token,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const getMarkets = (): AppThunk => {\r\n    return async (dispatch, getstate) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getstate();\r\n        try {\r\n            const data: PostalCodeResponse = await fetcher('/user/postalcode', {\r\n                token: state.appStore.data.token,\r\n                postalcode: state.appStore.data.postalCode,\r\n            });\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        markets: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n            dispatch(setData({ postalCode: '' }));\r\n            dispatch(setData({ marketSelected: '' }));\r\n        }\r\n    };\r\n};\r\n\r\nexport const getMarketCategories = (): AppThunk => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getState();\r\n        try {\r\n            const data: CategoriesResponse = await fetcher(\r\n                '/company/categories',\r\n                {\r\n                    token: state.appStore.data.token,\r\n                    company_id: state.appStore.data.marketSelected?.id,\r\n                }\r\n            );\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        marketCategories: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const getProducts = (category_id: number): AppThunk => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getState();\r\n        try {\r\n            const data: ProductsResponse = await fetcher('/company/items', {\r\n                token: state.appStore.data.token,\r\n                company_id: state.appStore.data.marketSelected?.id,\r\n                category_id: category_id,\r\n            });\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        products: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const getCategoryProducts = (category_id: number): AppThunk => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getState();\r\n        try {\r\n            const data: ProductsResponse = await fetcher('/company/featured', {\r\n                token: state.appStore.data.token,\r\n                company_id: state.appStore.data.marketSelected?.id,\r\n                category_id: category_id,\r\n            });\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        categoryProducts: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const setData = <T>(data: { [key: string]: T }): AppThunk => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(asyncSuccess(data));\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n        }\r\n    };\r\n};\r\n","import { configureStore, Action } from '@reduxjs/toolkit';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { AppState } from './AppSlice';\r\nimport appSliceReducer from './AppSlice';\r\n\r\nexport type AppThunk = ThunkAction<\r\n    void,\r\n    {\r\n        appState: AppState;\r\n    },\r\n    unknown,\r\n    Action<string>\r\n>;\r\n// TODO cambiar el any\r\nconst store: any = configureStore({\r\n    reducer: {\r\n        appStore: appSliceReducer,\r\n    },\r\n});\r\n\r\nexport default store;\r\n","import { CssBaseline, MuiThemeProvider } from '@material-ui/core';\r\nimport { ThemeProvider as EmotionThemeProvider } from 'emotion-theming';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport React, { FC } from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport theme from '../../config/theme';\r\nimport store from 'store';\r\n\r\nconst Providers: FC = ({ children }) => (\r\n    <EmotionThemeProvider theme={theme}>\r\n        <MuiThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Provider store={store}>\r\n                <BrowserRouter>{children}</BrowserRouter>\r\n            </Provider>\r\n        </MuiThemeProvider>\r\n    </EmotionThemeProvider>\r\n);\r\n\r\n<h1>Hola</h1>;\r\n\r\nexport default Providers;\r\n","const routes = {\r\n    home: '/',\r\n    marketList: '/tienda',\r\n    marketId: '/tienda/:id',\r\n    productList: '/tienda/:id/:categoryId/:subcategoryId',\r\n    categoryProductList: '/tienda/:id/:categoryId/',\r\n};\r\n\r\nexport type Routes = typeof routes;\r\n\r\nexport default routes;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    Button,\r\n    CardMedia,\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport routes from 'config/routes';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getMarkets, getToken, setData } from 'store/AppSlice';\r\n\r\nconst InputButton = styled.div({\r\n    margin: 15,\r\n    padding: 7,\r\n    border: 'solid 3px #3f51b5',\r\n    display: 'flex',\r\n    width: 'fit-content',\r\n    borderRadius: 7,\r\n    boxShadow: '0 0 450px #f50057',\r\n});\r\n\r\nconst CustomButton = styled(Button)({\r\n    height: 48,\r\n});\r\n\r\nconst CustomGrid = styled(Grid)({\r\n    height: 'calc(100vh - 86px)',\r\n});\r\n\r\nconst CustomCardMedia = styled(CardMedia)({\r\n    width: '100%',\r\n    backgroundSize: 'contain',\r\n});\r\n\r\nconst Home: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [postalCode, setPostalCode] = useState<string>('');\r\n\r\n    const getMarketsAction = () => {\r\n        dispatch(\r\n            setData({\r\n                postalCode: postalCode,\r\n            })\r\n        );\r\n        dispatch(getMarkets());\r\n        history.push(routes.marketList);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getToken());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <CustomGrid container justify=\"center\">\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                item\r\n                sm={6}\r\n                xs={12}\r\n            >\r\n                <Typography variant=\"h2\">¡Quédate en casa!</Typography>\r\n                <Typography variant=\"h2\">Nosotros te</Typography>\r\n                <Typography variant=\"h2\">hacemos la compra</Typography>\r\n                <InputButton>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Código postal\"\r\n                        required\r\n                        inputProps={{ minLength: 5, maxLength: 5 }}\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => setPostalCode(event.target.value)}\r\n                    />\r\n\r\n                    <CustomButton\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        disabled={postalCode.length !== 5}\r\n                        onClick={getMarketsAction}\r\n                    >\r\n                        ¡HACER LA COMPRA!\r\n                    </CustomButton>\r\n                </InputButton>\r\n            </Grid>\r\n            <Grid container item sm={6} xs={12}>\r\n                <CustomCardMedia\r\n                    className=\"Comprar\"\r\n                    image={\r\n                        window.window.screen.width < 450\r\n                            ? '/shop-mobile.png'\r\n                            : '/shop-desktop.png'\r\n                    }\r\n                    title=\"shopping\"\r\n                />\r\n            </Grid>\r\n        </CustomGrid>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CircularProgress,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { MarketModel, MarketServiceModel } from 'models/main';\r\nimport React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { appSelector, getMarketCategories, setData } from 'store/AppSlice';\r\n\r\nconst ImgContainer = styled.div({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 18,\r\n});\r\n\r\nconst CustomCard = styled(Card)({\r\n    width: '100%',\r\n    minHeight: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n});\r\n\r\nconst CustomGrid = styled(Grid)({\r\n    '&:hover': {\r\n        boxShadow: '0 1px 8px #b5b5b5',\r\n    },\r\n    '&:active': {\r\n        boxShadow: 'inset 0 0 12px #b5b5b5',\r\n    },\r\n});\r\n\r\nconst Container = styled.div({\r\n    padding: '25px 50px',\r\n});\r\n\r\nconst ProgressGrid = styled(Grid)({\r\n    height: '80vh',\r\n});\r\n\r\nconst MarketList: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { data } = useSelector(appSelector);\r\n\r\n    const showMarketCategories = (event: any, market: MarketModel) => {\r\n        dispatch(\r\n            setData({\r\n                marketSelected: market,\r\n            })\r\n        );\r\n        dispatch(getMarketCategories());\r\n        history.push(`/tienda/${market.shortcut}`);\r\n        const cards = document.getElementsByClassName('MuiCard-root');\r\n        Array.from(cards).forEach(\r\n            (element: any) => (element.style.boxShadow = 'none')\r\n        );\r\n        event.currentTarget.style.boxShadow = `0 0 0 2px rgb(${\r\n            market.color !== '255,255,255' ? market.color : '61,86,186'\r\n        })`;\r\n    };\r\n\r\n    return data.markets?.status === 'OK' ? (\r\n        <Container>\r\n            <Typography variant=\"h4\" align=\"center\" paragraph>\r\n                ¿Dónde quieres comprar?\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                {data.markets?.services.map((services: MarketServiceModel) =>\r\n                    services.markets.map((market: MarketModel) => (\r\n                        <CustomGrid\r\n                            key={market.id}\r\n                            container\r\n                            item\r\n                            lg={2}\r\n                            md={3}\r\n                            sm={6}\r\n                            xs={12}\r\n                        >\r\n                            <CustomCard\r\n                                onClick={event => {\r\n                                    showMarketCategories(event, market);\r\n                                }}\r\n                            >\r\n                                <ImgContainer>\r\n                                    <img\r\n                                        alt={market.name}\r\n                                        src={market.logotype}\r\n                                    />\r\n                                </ImgContainer>\r\n                                <CardContent>\r\n                                    <Typography color=\"textSecondary\">\r\n                                        {services.delivery}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CustomCard>\r\n                        </CustomGrid>\r\n                    ))\r\n                )}\r\n            </Grid>\r\n        </Container>\r\n    ) : (\r\n        <ProgressGrid container justify=\"center\" alignContent=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">\r\n                <CircularProgress color=\"secondary\" />\r\n                Cargando...\r\n            </Typography>\r\n        </ProgressGrid>\r\n    );\r\n};\r\n\r\nexport default MarketList;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { Category, Item, Category_C, Item2 } from 'models/main';\r\nimport React, { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { setData } from 'store/AppSlice';\r\n\r\nconst Container = styled.div({\r\n    padding: '50px',\r\n});\r\n\r\nconst CategoryGrid = styled(Grid)({\r\n    padding: '50px 0 30px',\r\n});\r\n\r\nconst CategoryTypography = styled(Typography)({\r\n    width: '95%',\r\n    borderBottom: '1px solid #6ad76e',\r\n});\r\n\r\nconst ProductsGrid = styled(Grid)({\r\n    padding: '0 50px',\r\n});\r\n\r\nconst CustomCard = styled(Card)({\r\n    width: '100%',\r\n    padding: 15,\r\n});\r\n\r\nconst CustomCardMedia = styled(CardMedia)({\r\n    height: 140,\r\n    backgroundSize: 'contain',\r\n});\r\n\r\nconst CustomCardContent = styled(CardContent)({\r\n    paddingTop: 30,\r\n});\r\n\r\nconst ProgressGrid = styled(Grid)({\r\n    height: '80vh',\r\n});\r\n\r\nconst CategoryProductsList: FC = () => {\r\n    const location = useLocation<any>();\r\n    const dispatch = useDispatch();\r\n\r\n    const showDetails = (data: string) => {\r\n        dispatch(\r\n            setData({\r\n                isDialogOpen: {\r\n                    show: true,\r\n                    dialogMsg: data,\r\n                    dialogTitle: 'PRODUCTO',\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    const prodcutView = (category: Category_C | Category, items: any) => {\r\n        return (\r\n            <>\r\n                <CategoryGrid container alignItems=\"center\">\r\n                    <Avatar src={category.icon} />\r\n                    <CategoryTypography variant=\"h6\">\r\n                        {category.name}\r\n                    </CategoryTypography>\r\n                </CategoryGrid>\r\n                <ProductsGrid container spacing={3}>\r\n                    {items.map((item: Item2 | Item) => (\r\n                        <Grid\r\n                            container\r\n                            item\r\n                            lg={2}\r\n                            md={3}\r\n                            sm={6}\r\n                            xs={12}\r\n                            direction=\"column\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <CustomCard\r\n                                onClick={() => showDetails(item.description)}\r\n                            >\r\n                                <CardActionArea>\r\n                                    <CustomCardMedia\r\n                                        title={item.name}\r\n                                        image={item.picture}\r\n                                    />\r\n                                    <CustomCardContent>\r\n                                        <Typography align=\"right\">\r\n                                            {item.price} €\r\n                                        </Typography>\r\n                                        <div>\r\n                                            <Typography align=\"left\">\r\n                                                {item.name}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </CustomCardContent>\r\n                                </CardActionArea>\r\n                            </CustomCard>\r\n                        </Grid>\r\n                    ))}\r\n                </ProductsGrid>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return location.state ? (\r\n        <Container>\r\n            {location.state.categories\r\n                ? location.state.categories.map((category: Category_C) =>\r\n                      prodcutView(category, category.items)\r\n                  )\r\n                : prodcutView(\r\n                      location.state.items[0].category,\r\n                      location.state.items\r\n                  )}\r\n        </Container>\r\n    ) : (\r\n        <ProgressGrid container justify=\"center\" alignContent=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">\r\n                <CircularProgress color=\"secondary\" />\r\n                Cargando...\r\n            </Typography>\r\n        </ProgressGrid>\r\n    );\r\n};\r\n\r\nexport default CategoryProductsList;\r\n","import Home from 'components/Pages/Home';\r\nimport MarketList from 'components/Pages/MarketsList';\r\nimport CategoryProductsList from 'components/Pages/CategoryProductsList';\r\nimport React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport routes from '../../config/routes';\r\n\r\nconst Router = (): JSX.Element => (\r\n    <Switch>\r\n        <Route exact path={routes.home}>\r\n            <Home />\r\n        </Route>\r\n        <Route exact path={routes.marketList}>\r\n            <MarketList />\r\n        </Route>\r\n        <Route exact path={routes.marketId}>\r\n            <MarketList />\r\n        </Route>\r\n        <Route exact path={routes.productList}>\r\n            <CategoryProductsList />\r\n        </Route>\r\n        <Route exact path={routes.categoryProductList}>\r\n            <CategoryProductsList />\r\n        </Route>\r\n        <Redirect to={routes.home} />\r\n    </Switch>\r\n);\r\n\r\nexport default Router;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    AppBar as MuiAppBar,\r\n    Avatar,\r\n    Button,\r\n    Input,\r\n    InputLabel,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { appSelector, getMarkets, setData } from 'store/AppSlice';\r\n\r\nconst CustomToolbar = styled(Toolbar)({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n});\r\n\r\nconst MarketAvatar = styled(Avatar)({\r\n    height: 35,\r\n    width: 35,\r\n});\r\n\r\nconst AppBar: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { data } = useSelector(appSelector);\r\n\r\n    const changePostalCode = (value: string) => {\r\n        dispatch(setData({ postalCode: value }));\r\n        dispatch(getMarkets());\r\n    };\r\n\r\n    const setInputColor = () => {\r\n        const res =\r\n            data.marketSelected?.color !== '255,255,255'\r\n                ? { color: 'white' }\r\n                : { color: 'black' };\r\n        return res;\r\n    };\r\n\r\n    return (\r\n        <MuiAppBar\r\n            position=\"sticky\"\r\n            style={{ background: `rgb(${data.marketSelected?.color})` }}\r\n        >\r\n            <CustomToolbar color=\"inherit\">\r\n                <div>\r\n                    {data.marketSelected && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            startIcon={\r\n                                <MarketAvatar\r\n                                    alt={data.marketSelected?.name}\r\n                                    src={data.marketSelected?.icon}\r\n                                />\r\n                            }\r\n                            onClick={() =>\r\n                                dispatch(\r\n                                    setData({\r\n                                        isSideBarOpen: true,\r\n                                    })\r\n                                )\r\n                            }\r\n                        >\r\n                            <Typography variant=\"h6\">CATEGORÍAS</Typography>\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n                {data.postalCode && (\r\n                    <div>\r\n                        <InputLabel\r\n                            style={setInputColor()}\r\n                            htmlFor=\"edit-postalCode\"\r\n                        >\r\n                            {data.markets?.city.toUpperCase()}\r\n                        </InputLabel>\r\n                        <Input\r\n                            color=\"secondary\"\r\n                            style={setInputColor()}\r\n                            id=\"edit-postalCode\"\r\n                            defaultValue={data.postalCode}\r\n                            required\r\n                            inputProps={{ minLength: 5, maxLength: 5 }}\r\n                            onChange={event =>\r\n                                event.target.checkValidity() &&\r\n                                changePostalCode(event.target.value)\r\n                            }\r\n                        />\r\n                    </div>\r\n                )}\r\n            </CustomToolbar>\r\n        </MuiAppBar>\r\n    );\r\n};\r\n\r\nexport default AppBar;\r\n","import React, { FC, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    AppBar,\r\n    Avatar,\r\n    Button,\r\n    Collapse,\r\n    Divider,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport styled from '@emotion/styled';\r\nimport {\r\n    appSelector,\r\n    getCategoryProducts,\r\n    getProducts,\r\n    setData,\r\n} from 'store/AppSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Check, ExpandLess } from '@material-ui/icons';\r\nimport routes from 'config/routes';\r\n\r\nconst CustomList = styled(List)({\r\n    background: '#f5f5f5',\r\n});\r\n\r\nconst CustomListItem = styled(ListItem)({\r\n    '&:hover': {\r\n        background: '#f5f5f5',\r\n    },\r\n    '&:active': {\r\n        background: '#4fd0531a',\r\n    },\r\n});\r\n\r\nconst Content = styled.div({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '0 8px 0 4px',\r\n});\r\n\r\nconst CustomTypography = styled(Typography)({\r\n    lineHeight: 1,\r\n    paddingLeft: 10,\r\n});\r\n\r\nconst CustomAvatar = styled(Avatar)({\r\n    height: 24,\r\n    width: 24,\r\n});\r\n\r\nconst CustomDrawer = styled(Drawer)({\r\n    width: '21.7%',\r\n});\r\n\r\nconst CustomListItemText = styled(ListItemText)({\r\n    padding: '0 7px',\r\n});\r\n\r\nconst SideBar: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { data } = useSelector(appSelector);\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [category__, setCategory] = useState<number>(0);\r\n    const [subcategory__, setSubcategory] = useState<number>(0);\r\n\r\n    const showProducts = (\r\n        category_name: string,\r\n        subcategory_name: string,\r\n        subcategory_id: number\r\n    ) => {\r\n        if (subcategory_name) {\r\n            console.log(dispatch(getProducts(subcategory_id)));\r\n            Promise.resolve(dispatch(getProducts(subcategory_id))).then(\r\n                (res: any) => {\r\n                    console.log(res);\r\n                    history.push(\r\n                        `/tienda/${data.marketSelected?.shortcut}/${category_name}/${subcategory_name}`,\r\n                        res.payload.products\r\n                    );\r\n                }\r\n            );\r\n        } else {\r\n            Promise.resolve(\r\n                dispatch(getCategoryProducts(category__))\r\n            ).then((res: any) =>\r\n                history.push(\r\n                    `/tienda/${data.marketSelected?.shortcut}/${category_name}`,\r\n                    res.payload.categoryProducts\r\n                )\r\n            );\r\n        }\r\n\r\n        dispatch(\r\n            setData({\r\n                isSideBarOpen: false,\r\n            })\r\n        );\r\n    };\r\n\r\n    const setHeaderFontColor = () => {\r\n        const res =\r\n            data.marketSelected?.color !== '255,255,255'\r\n                ? { color: 'white' }\r\n                : { color: 'black' };\r\n        return res;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {data.marketCategories?.status === 'OK' && (\r\n                <CustomDrawer\r\n                    open={data.isSideBarOpen}\r\n                    onClose={() =>\r\n                        dispatch(\r\n                            setData({\r\n                                isSideBarOpen: false,\r\n                            })\r\n                        )\r\n                    }\r\n                >\r\n                    <AppBar\r\n                        position=\"sticky\"\r\n                        style={{\r\n                            backgroundColor: `rgb(${data.marketSelected?.color})`,\r\n                        }}\r\n                    >\r\n                        <Toolbar style={setHeaderFontColor()}>\r\n                            <CustomAvatar\r\n                                alt={data.marketSelected?.name}\r\n                                src={data.marketSelected?.icon}\r\n                            />\r\n                            <Content>\r\n                                <CustomTypography variant=\"h6\">\r\n                                    {data.marketSelected?.name}\r\n                                </CustomTypography>\r\n                                <CustomTypography variant=\"caption\">\r\n                                    Comprando en {data.postalCode}\r\n                                </CustomTypography>\r\n                            </Content>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => {\r\n                                    dispatch(\r\n                                        setData({\r\n                                            isSideBarOpen: false,\r\n                                        })\r\n                                    );\r\n                                    history.push(routes.marketList);\r\n                                }}\r\n                            >\r\n                                Cambiar\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <div role=\"presentation\">\r\n                        <List>\r\n                            {data.marketCategories?.categories.map(category => (\r\n                                <>\r\n                                    <CustomListItem\r\n                                        disableRipple\r\n                                        button\r\n                                        key={category.id}\r\n                                        onClick={() => {\r\n                                            setOpen(!open);\r\n                                            setCategory(\r\n                                                category__ === category.id\r\n                                                    ? 0\r\n                                                    : category.id\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        <CustomAvatar\r\n                                            alt={category.name}\r\n                                            src={category.icon}\r\n                                        />\r\n                                        <CustomListItemText\r\n                                            primary={category.name}\r\n                                        />\r\n                                        {category.id === category__ && (\r\n                                            <ExpandLess color=\"action\" />\r\n                                        )}\r\n                                    </CustomListItem>\r\n                                    <Divider\r\n                                        variant=\"middle\"\r\n                                        key={'divider' + category.id}\r\n                                    />\r\n                                    <Collapse\r\n                                        key={category.id + 1000}\r\n                                        in={category.id === category__}\r\n                                        timeout=\"auto\"\r\n                                        unmountOnExit\r\n                                    >\r\n                                        <CustomList disablePadding>\r\n                                            <ListItem\r\n                                                button\r\n                                                onClick={() => {\r\n                                                    showProducts(\r\n                                                        category.shortcut,\r\n                                                        '',\r\n                                                        category.id\r\n                                                    );\r\n                                                    setSubcategory(category.id);\r\n                                                }}\r\n                                            >\r\n                                                <ListItemText\r\n                                                    primary={\r\n                                                        'Ver toda la sección'\r\n                                                    }\r\n                                                />\r\n                                                {subcategory__ ===\r\n                                                    category.id && (\r\n                                                    <Check color=\"action\" />\r\n                                                )}\r\n                                            </ListItem>\r\n                                            <Divider variant=\"middle\" />\r\n                                            {category.categories.map(\r\n                                                subcategory => (\r\n                                                    <>\r\n                                                        <ListItem\r\n                                                            button\r\n                                                            key={subcategory.id}\r\n                                                            onClick={() => {\r\n                                                                showProducts(\r\n                                                                    category.shortcut,\r\n                                                                    subcategory.shortcut,\r\n                                                                    subcategory.id\r\n                                                                );\r\n                                                                setSubcategory(\r\n                                                                    subcategory.id\r\n                                                                );\r\n                                                            }}\r\n                                                        >\r\n                                                            <CustomAvatar\r\n                                                                alt={\r\n                                                                    subcategory.name\r\n                                                                }\r\n                                                                src={\r\n                                                                    subcategory.icon\r\n                                                                }\r\n                                                            />\r\n                                                            <CustomListItemText\r\n                                                                primary={\r\n                                                                    subcategory.name\r\n                                                                }\r\n                                                            />\r\n                                                            {subcategory.id ===\r\n                                                                subcategory__ && (\r\n                                                                <Check color=\"action\" />\r\n                                                            )}\r\n                                                        </ListItem>\r\n                                                        <Divider variant=\"middle\" />\r\n                                                    </>\r\n                                                )\r\n                                            )}\r\n                                        </CustomList>\r\n                                    </Collapse>\r\n                                </>\r\n                            ))}\r\n                        </List>\r\n                    </div>\r\n                </CustomDrawer>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n} from '@material-ui/core';\r\nimport { appSelector, setData } from 'store/AppSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport routes from 'config/routes';\r\n\r\nconst AppDialog: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { data } = useSelector(appSelector);\r\n\r\n    const closeDialog = () => {\r\n        !data.isDialogOpen.dialogTitle && history.push(routes.home);\r\n        dispatch(\r\n            setData({\r\n                isDialogOpen: {\r\n                    show: false,\r\n                    dialogMsg: '',\r\n                    dialogTitle: undefined,\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={data.isDialogOpen.show}\r\n                onClose={closeDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {data?.isDialogOpen?.dialogTitle}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {data?.isDialogOpen?.dialogMsg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"primary\">\r\n                        Aceptar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppDialog;\r\n","import React, { FC } from 'react';\r\n\r\nimport Providers from 'components/Providers';\r\nimport Router from 'components/Router';\r\nimport AppBar from './AppBar';\r\nimport SideBar from 'components/App/Sidebar';\r\nimport AppDialog from 'components/App/AppDialog';\r\n\r\nconst App: FC = () => {\r\n    return (\r\n        <Providers>\r\n            <AppBar />\r\n            <SideBar />\r\n            <AppDialog />\r\n            <Router />\r\n        </Providers>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport '@emotion/core';\r\nimport 'styles.css';\r\n\r\nimport App from 'components/App';\r\n\r\nconst rootElement = document.getElementById('root');\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}