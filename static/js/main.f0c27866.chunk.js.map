{"version":3,"sources":["config/theme.ts","config/apiClient.ts","config/fetcher.ts","store/AppSlice.ts","store/index.ts","components/Providers/Providers.tsx","config/routes.ts","components/Pages/Home.tsx","components/Pages/MarketsList.tsx","components/Pages/CategoryProductsList.tsx","components/Router/Router.tsx","components/App/AppBar.tsx","components/App/Sidebar.tsx","components/App/AppDialog.tsx","components/App/App.tsx","index.tsx"],"names":["baseTheme","createMuiTheme","theme","responsiveFontSizes","apiClient","axios","create","baseURL","paramsSerializer","params","qs","stringify","arrayFormat","fetcher","url","get","then","response","data","appSlice","createSlice","name","initialState","isSideBarOpen","isDialogOpen","show","dialogMsg","asyncLoading","asyncError","reducers","asyncStart","state","asyncSuccess","payload","actions","appSelector","appStore","getMarkets","dispatch","getstate","a","token","postalcode","postalCode","status","markets","error","message","setData","marketSelected","store","configureStore","reducer","appSliceReducer","Providers","children","CssBaseline","routes","home","marketList","marketId","productList","categoryProductList","InputButton","styled","div","margin","padding","border","display","width","borderRadius","boxShadow","CustomButton","Button","height","CustomGrid","Grid","CustomCardMedia","CardMedia","backgroundSize","Home","history","useHistory","useDispatch","useState","setPostalCode","useEffect","container","justify","direction","alignItems","item","sm","xs","Typography","variant","align","TextField","id","label","required","onChange","event","target","value","color","disabled","length","test","onClick","push","className","src","window","screen","title","ImgContainer","justifyContent","CustomCard","Card","minHeight","flexDirection","cursor","Container","CustomCardContent","CardContent","ProgressGrid","MarketList","useSelector","showMarketCategories","market","getState","company_id","marketCategories","shortcut","cards","document","getElementsByClassName","Array","from","forEach","element","style","currentTarget","paragraph","spacing","services","map","lg","md","alt","logotype","delivery","alignContent","CircularProgress","CategoryGrid","CategoryTypography","borderBottom","ProductsGrid","paddingTop","CategoryProductsList","location","useLocation","prodcutView","category","items","Avatar","icon","description","dialogTitle","CardActionArea","image","picture","price","categories","Router","exact","path","to","CustomToolbar","Toolbar","MarketAvatar","AppBar","setInputColor","position","background","startIcon","FormControl","InputLabel","htmlFor","city","toUpperCase","Input","defaultValue","changePostalCode","CustomList","List","CustomListItem","ListItem","Content","CustomTypography","lineHeight","paddingLeft","CustomAvatar","CustomDrawer","Drawer","CustomListItemText","ListItemText","SideBar","open","setOpen","category__","setCategory","subcategory__","setSubcategory","showProducts","category_name","subcategory_name","subcategory_id","category_id","Promise","resolve","products","res","categoryProducts","getCategoryProducts","onClose","backgroundColor","setHeaderFontColor","role","disableRipple","button","primary","ExpandLess","Divider","Collapse","in","timeout","unmountOnExit","disablePadding","Check","subcategory","AppDialog","closeDialog","undefined","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","App","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.f0c27866.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\r\n// import { Ubuntu } from './fonts/ubuntu-fonts';\r\n\r\nconst baseTheme = createMuiTheme({});\r\nconst theme = responsiveFontSizes(baseTheme);\r\n\r\nexport default theme;\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'https://api.comprea.com/v7',\r\n    paramsSerializer: params => qs.stringify(params, { arrayFormat: 'comma' }),\r\n});\r\n\r\nexport default apiClient;\r\n","import { AxiosRequestConfig } from 'axios';\r\nimport apiClient from './apiClient';\r\n\r\nexport const fetcher = <T>(\r\n    url: string,\r\n    params?: AxiosRequestConfig['params']\r\n): Promise<T> =>\r\n    apiClient\r\n        .get<T>(url, { params })\r\n        .then(response => response.data);\r\n\r\nexport default fetcher;\r\n","import { fetcher } from 'config/fetcher';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk } from './';\r\nimport {\r\n    CategoriesResponse,\r\n    AppDialogProps,\r\n    MarketModel,\r\n    CityMarketsModel,\r\n    PostalCodeResponse,\r\n    Products,\r\n    CategoryProductsResponse,\r\n    ProductsResponse,\r\n    SessionTokenResponse,\r\n} from 'models/main';\r\n\r\ninterface AppData {\r\n    postalCode?: number;\r\n    token?: string;\r\n    isSideBarOpen: boolean;\r\n    markets?: CityMarketsModel;\r\n    isDialogOpen: AppDialogProps;\r\n    marketCategories?: CategoriesResponse;\r\n    marketSelected?: MarketModel;\r\n    products?: Products;\r\n    categoryProducts?: CategoryProductsResponse;\r\n}\r\n\r\nexport interface AppState {\r\n    data: AppData;\r\n    asyncLoading: boolean;\r\n    asyncError: string;\r\n}\r\n\r\nconst initialState: AppState = {\r\n    data: {\r\n        isSideBarOpen: false,\r\n        isDialogOpen: { show: false, dialogMsg: '' },\r\n    },\r\n    asyncLoading: false,\r\n    asyncError: '',\r\n};\r\n\r\nconst appSlice = createSlice({\r\n    name: 'app',\r\n    initialState,\r\n    reducers: {\r\n        asyncStart: state => ({\r\n            ...state,\r\n            asyncLoading: true,\r\n        }),\r\n        asyncSuccess: (\r\n            state,\r\n            { payload }: PayloadAction<{ [key: string]: any }>\r\n        ) => ({\r\n            ...state,\r\n            asyncLoading: false,\r\n            data: {\r\n                ...state.data,\r\n                ...payload,\r\n            },\r\n        }),\r\n        asyncError: (state, { payload }: PayloadAction<string>) => ({\r\n            ...state,\r\n            asyncLoading: false,\r\n            asyncError: payload,\r\n        }),\r\n    },\r\n});\r\n\r\nexport const { asyncStart, asyncSuccess, asyncError } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n\r\nexport const appSelector = (state: { appStore: AppState }) => state.appStore;\r\n\r\nexport const getToken = (): AppThunk => {\r\n    return async dispatch => {\r\n        dispatch(asyncStart());\r\n\r\n        try {\r\n            const data: SessionTokenResponse = await fetcher('/user/session');\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        token: data.token,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const getMarkets = (): AppThunk => {\r\n    return async (dispatch, getstate) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getstate();\r\n        try {\r\n            const data: PostalCodeResponse = await fetcher('/user/postalcode', {\r\n                token: state.appStore.data.token,\r\n                postalcode: state.appStore.data.postalCode,\r\n            });\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        markets: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n            dispatch(setData({ postalCode: '' }));\r\n            dispatch(setData({ marketSelected: '' }));\r\n        }\r\n    };\r\n};\r\n\r\nexport const getMarketCategories = (): AppThunk => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getState();\r\n        try {\r\n            const data: CategoriesResponse = await fetcher(\r\n                '/company/categories',\r\n                {\r\n                    token: state.appStore.data.token,\r\n                    company_id: state.appStore.data.marketSelected?.id,\r\n                }\r\n            );\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        marketCategories: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const getProducts = (category_id: number): AppThunk => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getState();\r\n        try {\r\n            const data: ProductsResponse = await fetcher('/company/items', {\r\n                token: state.appStore.data.token,\r\n                company_id: state.appStore.data.marketSelected?.id,\r\n                category_id: category_id,\r\n            });\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        products: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const getCategoryProducts = (category_id: number): AppThunk => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getState();\r\n        try {\r\n            const data: ProductsResponse = await fetcher('/company/featured', {\r\n                token: state.appStore.data.token,\r\n                company_id: state.appStore.data.marketSelected?.id,\r\n                category_id: category_id,\r\n            });\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        categoryProducts: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const setData = <T>(data: { [key: string]: T }): AppThunk => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(asyncSuccess(data));\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n        }\r\n    };\r\n};\r\n","import { configureStore, Action } from '@reduxjs/toolkit';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { AppState } from './AppSlice';\r\nimport appSliceReducer from './AppSlice';\r\n\r\nexport type AppThunk = ThunkAction<\r\n    void,\r\n    {\r\n        appState: AppState;\r\n    },\r\n    unknown,\r\n    Action<string>\r\n>;\r\n// TODO cambiar el any\r\nconst store: any = configureStore({\r\n    reducer: {\r\n        appStore: appSliceReducer,\r\n    },\r\n});\r\n\r\nexport default store;\r\n","import { CssBaseline, MuiThemeProvider } from '@material-ui/core';\r\nimport { ThemeProvider as EmotionThemeProvider } from 'emotion-theming';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport React, { FC } from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport theme from '../../config/theme';\r\nimport store from 'store';\r\n\r\nconst Providers: FC = ({ children }) => (\r\n    <EmotionThemeProvider theme={theme}>\r\n        <MuiThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Provider store={store}>\r\n                <BrowserRouter>{children}</BrowserRouter>\r\n            </Provider>\r\n        </MuiThemeProvider>\r\n    </EmotionThemeProvider>\r\n);\r\n\r\n<h1>Hola</h1>;\r\n\r\nexport default Providers;\r\n","const routes = {\r\n    home: '/',\r\n    marketList: '/tienda',\r\n    marketId: '/tienda/:id',\r\n    productList: '/tienda/:id/:categoryId/:subcategoryId',\r\n    categoryProductList: '/tienda/:id/:categoryId/',\r\n};\r\n\r\nexport type Routes = typeof routes;\r\n\r\nexport default routes;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    Button,\r\n    CardMedia,\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport routes from 'config/routes';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getMarkets, getToken, setData } from 'store/AppSlice';\r\n\r\nconst InputButton = styled.div({\r\n    margin: 15,\r\n    padding: 7,\r\n    border: 'solid 3px #3f51b5',\r\n    display: 'flex',\r\n    width: 'fit-content',\r\n    borderRadius: 7,\r\n    boxShadow: '0 0 450px #f50057',\r\n});\r\n\r\nconst CustomButton = styled(Button)({\r\n    height: 48,\r\n});\r\n\r\nconst CustomGrid = styled(Grid)({\r\n    height: 'calc(100vh - 86px)',\r\n});\r\n\r\nconst CustomCardMedia = styled(CardMedia)({\r\n    width: '100%',\r\n    backgroundSize: 'contain',\r\n});\r\n\r\nconst Home: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [postalCode, setPostalCode] = useState<string>('');\r\n\r\n    const getMarketsAction = () => {\r\n        dispatch(\r\n            setData({\r\n                postalCode: postalCode,\r\n            })\r\n        );\r\n        dispatch(getMarkets());\r\n        history.push(routes.marketList);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getToken());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <CustomGrid container justify=\"center\">\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                item\r\n                sm={6}\r\n                xs={12}\r\n            >\r\n                <Typography variant=\"h2\" align=\"center\">\r\n                    ¡Quédate en casa! <br /> Nosotros te <br /> hacemos la\r\n                    compra\r\n                </Typography>\r\n                <InputButton>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Código postal\"\r\n                        required\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => setPostalCode(event.target.value)}\r\n                    />\r\n\r\n                    <CustomButton\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        disabled={\r\n                            !postalCode.length || !/^[0-9]{5}$/.test(postalCode)\r\n                        }\r\n                        onClick={getMarketsAction}\r\n                    >\r\n                        ¡HACER LA COMPRA!\r\n                    </CustomButton>\r\n                </InputButton>\r\n            </Grid>\r\n            <Grid container item sm={6} xs={12}>\r\n                <CustomCardMedia\r\n                    className=\"Comprar\"\r\n                    src={\r\n                        window.window.screen.width < 450\r\n                            ? 'prueba-lolamarket/shop-mobile.png'\r\n                            : 'prueba-lolamarket/shop-desktop.png'\r\n                    }\r\n                    title=\"shopping\"\r\n                />\r\n            </Grid>\r\n        </CustomGrid>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CircularProgress,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { MarketModel, MarketServiceModel } from 'models/main';\r\nimport React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { appSelector, getMarketCategories, setData } from 'store/AppSlice';\r\n\r\nconst ImgContainer = styled.div({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 18,\r\n});\r\n\r\nconst CustomCard = styled(Card)({\r\n    width: '100%',\r\n    minHeight: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n});\r\n\r\nconst CustomGrid = styled(Grid)({\r\n    '&:hover': {\r\n        boxShadow: '0 1px 8px #b5b5b5',\r\n    },\r\n    '&:active': {\r\n        boxShadow: 'inset 0 0 12px #b5b5b5',\r\n    },\r\n});\r\n\r\nconst Container = styled.div({\r\n    padding: '25px 50px',\r\n});\r\n\r\nconst CustomCardContent = styled(CardContent)({\r\n    width: '100%',\r\n    padding: '0 16px 16px',\r\n});\r\n\r\nconst ProgressGrid = styled(Grid)({\r\n    height: '80vh',\r\n});\r\n\r\nconst MarketList: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { data } = useSelector(appSelector);\r\n\r\n    const showMarketCategories = (event: any, market: MarketModel) => {\r\n        dispatch(\r\n            setData({\r\n                marketSelected: market,\r\n            })\r\n        );\r\n        dispatch(getMarketCategories());\r\n        history.push(`/tienda/${market.shortcut}`);\r\n        const cards = document.getElementsByClassName('MuiCard-root');\r\n        Array.from(cards).forEach(\r\n            (element: any) => (element.style.boxShadow = 'none')\r\n        );\r\n        event.currentTarget.style.boxShadow = `0 0 0 2px rgb(${\r\n            market.color !== '255,255,255' ? market.color : '61,86,186'\r\n        })`;\r\n    };\r\n\r\n    return data.markets?.status === 'OK' ? (\r\n        <Container>\r\n            <Typography variant=\"h4\" align=\"center\" paragraph>\r\n                ¿Dónde quieres comprar?\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                {data.markets?.services.map((services: MarketServiceModel) =>\r\n                    services.markets.map((market: MarketModel) => (\r\n                        <CustomGrid\r\n                            key={market.id}\r\n                            container\r\n                            item\r\n                            lg={2}\r\n                            md={3}\r\n                            sm={6}\r\n                            xs={12}\r\n                        >\r\n                            <CustomCard\r\n                                onClick={event => {\r\n                                    showMarketCategories(event, market);\r\n                                }}\r\n                            >\r\n                                <ImgContainer>\r\n                                    <img\r\n                                        alt={market.name}\r\n                                        src={market.logotype}\r\n                                    />\r\n                                </ImgContainer>\r\n                                <CustomCardContent>\r\n                                    <Typography\r\n                                        color=\"textSecondary\"\r\n                                        align=\"right\"\r\n                                        variant=\"subtitle2\"\r\n                                    >\r\n                                        {services.delivery}\r\n                                    </Typography>\r\n                                </CustomCardContent>\r\n                            </CustomCard>\r\n                        </CustomGrid>\r\n                    ))\r\n                )}\r\n            </Grid>\r\n        </Container>\r\n    ) : (\r\n        <ProgressGrid container justify=\"center\" alignContent=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">\r\n                <CircularProgress color=\"secondary\" />\r\n                Cargando...\r\n            </Typography>\r\n        </ProgressGrid>\r\n    );\r\n};\r\n\r\nexport default MarketList;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { Category, Item, Category_C, Item2 } from 'models/main';\r\nimport React, { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { setData } from 'store/AppSlice';\r\n\r\nconst Container = styled.div({\r\n    padding: '50px',\r\n});\r\n\r\nconst CategoryGrid = styled(Grid)({\r\n    padding: '50px 0 30px',\r\n});\r\n\r\nconst CategoryTypography = styled(Typography)({\r\n    width: '95%',\r\n    borderBottom: '1px solid #6ad76e',\r\n});\r\n\r\nconst ProductsGrid = styled(Grid)({\r\n    padding: '0 50px',\r\n});\r\n\r\nconst CustomCard = styled(Card)({\r\n    width: '100%',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n});\r\n\r\nconst CustomCardMedia = styled(CardMedia)({\r\n    height: 140,\r\n    backgroundSize: 'contain',\r\n});\r\n\r\nconst CustomCardContent = styled(CardContent)({\r\n    paddingTop: 30,\r\n});\r\n\r\nconst ProgressGrid = styled(Grid)({\r\n    height: '80vh',\r\n});\r\n\r\nconst CategoryProductsList: FC = () => {\r\n    const location = useLocation<any>();\r\n    const dispatch = useDispatch();\r\n\r\n    const showDetails = (data: string) => {\r\n        dispatch(\r\n            setData({\r\n                isDialogOpen: {\r\n                    show: true,\r\n                    dialogMsg: data,\r\n                    dialogTitle: 'PRODUCTO',\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    const prodcutView = (category: Category_C | Category, items: any) => {\r\n        return (\r\n            <>\r\n                <CategoryGrid container alignItems=\"center\">\r\n                    <Avatar src={category.icon} />\r\n                    <CategoryTypography variant=\"h6\">\r\n                        {category.name}\r\n                    </CategoryTypography>\r\n                </CategoryGrid>\r\n                <ProductsGrid container spacing={3}>\r\n                    {items.map((item: Item2 | Item) => (\r\n                        <Grid\r\n                            container\r\n                            item\r\n                            lg={2}\r\n                            md={3}\r\n                            sm={6}\r\n                            xs={12}\r\n                            direction=\"column\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <CustomCard\r\n                                onClick={() => showDetails(item.description)}\r\n                            >\r\n                                <CardActionArea>\r\n                                    <CustomCardMedia\r\n                                        title={item.name}\r\n                                        image={item.picture}\r\n                                    />\r\n                                    <CustomCardContent>\r\n                                        <Typography align=\"right\">\r\n                                            {item.price} €\r\n                                        </Typography>\r\n                                        <div>\r\n                                            <Typography align=\"left\">\r\n                                                {item.name}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </CustomCardContent>\r\n                                </CardActionArea>\r\n                            </CustomCard>\r\n                        </Grid>\r\n                    ))}\r\n                </ProductsGrid>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return location.state ? (\r\n        <Container>\r\n            {location.state.categories\r\n                ? location.state.categories.map((category: Category_C) =>\r\n                      prodcutView(category, category.items)\r\n                  )\r\n                : prodcutView(\r\n                      location.state.items[0].category,\r\n                      location.state.items\r\n                  )}\r\n        </Container>\r\n    ) : (\r\n        <ProgressGrid container justify=\"center\" alignContent=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">\r\n                <CircularProgress color=\"secondary\" />\r\n                Cargando...\r\n            </Typography>\r\n        </ProgressGrid>\r\n    );\r\n};\r\n\r\nexport default CategoryProductsList;\r\n","import Home from 'components/Pages/Home';\r\nimport MarketList from 'components/Pages/MarketsList';\r\nimport CategoryProductsList from 'components/Pages/CategoryProductsList';\r\nimport React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport routes from '../../config/routes';\r\n\r\nconst Router = (): JSX.Element => (\r\n    <Switch>\r\n        <Route exact path={routes.home}>\r\n            <Home />\r\n        </Route>\r\n        <Route exact path={routes.marketList}>\r\n            <MarketList />\r\n        </Route>\r\n        <Route exact path={routes.marketId}>\r\n            <MarketList />\r\n        </Route>\r\n        <Route exact path={routes.productList}>\r\n            <CategoryProductsList />\r\n        </Route>\r\n        <Route exact path={routes.categoryProductList}>\r\n            <CategoryProductsList />\r\n        </Route>\r\n        <Redirect to={routes.home} />\r\n    </Switch>\r\n);\r\n\r\nexport default Router;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    AppBar as MuiAppBar,\r\n    Avatar,\r\n    Button,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { appSelector, getMarkets, setData } from 'store/AppSlice';\r\n\r\nconst CustomToolbar = styled(Toolbar)({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n});\r\n\r\nconst MarketAvatar = styled(Avatar)({\r\n    height: 35,\r\n    width: 35,\r\n});\r\n\r\nconst AppBar: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { data } = useSelector(appSelector);\r\n\r\n    const changePostalCode = (value: string) => {\r\n        dispatch(setData({ postalCode: value }));\r\n        dispatch(getMarkets());\r\n    };\r\n\r\n    const validatePostalCode = (value: string) => /^[0-9]{5}$/.test(value);\r\n\r\n    const setInputColor = () => {\r\n        const res =\r\n            data.marketSelected?.color !== '255,255,255'\r\n                ? { color: 'white' }\r\n                : { color: 'black' };\r\n        return res;\r\n    };\r\n\r\n    return (\r\n        <MuiAppBar\r\n            position=\"sticky\"\r\n            style={{ background: `rgb(${data.marketSelected?.color})` }}\r\n        >\r\n            <CustomToolbar color=\"inherit\">\r\n                <div>\r\n                    {data.marketSelected && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            startIcon={\r\n                                <MarketAvatar\r\n                                    alt={data.marketSelected?.name}\r\n                                    src={data.marketSelected?.icon}\r\n                                />\r\n                            }\r\n                            onClick={() =>\r\n                                dispatch(\r\n                                    setData({\r\n                                        isSideBarOpen: true,\r\n                                    })\r\n                                )\r\n                            }\r\n                        >\r\n                            <Typography variant=\"h6\">CATEGORÍAS</Typography>\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n                {data.postalCode && (\r\n                    <FormControl>\r\n                        <InputLabel\r\n                            style={setInputColor()}\r\n                            htmlFor=\"edit-postalCode\"\r\n                        >\r\n                            {data.markets?.city.toUpperCase()}\r\n                        </InputLabel>\r\n                        <Input\r\n                            color=\"secondary\"\r\n                            style={setInputColor()}\r\n                            id=\"edit-postalCode\"\r\n                            defaultValue={data.postalCode}\r\n                            required\r\n                            onChange={event =>\r\n                                validatePostalCode(event.target.value) &&\r\n                                changePostalCode(event.target.value)\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                )}\r\n            </CustomToolbar>\r\n        </MuiAppBar>\r\n    );\r\n};\r\n\r\nexport default AppBar;\r\n","import React, { FC, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    AppBar,\r\n    Avatar,\r\n    Button,\r\n    Collapse,\r\n    Divider,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport styled from '@emotion/styled';\r\nimport {\r\n    appSelector,\r\n    getCategoryProducts,\r\n    getProducts,\r\n    setData,\r\n} from 'store/AppSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Check, ExpandLess } from '@material-ui/icons';\r\nimport routes from 'config/routes';\r\n\r\nconst CustomList = styled(List)({\r\n    background: '#f5f5f5',\r\n});\r\n\r\nconst CustomListItem = styled(ListItem)({\r\n    '&:hover': {\r\n        background: '#f5f5f5',\r\n    },\r\n    '&:active': {\r\n        background: '#4fd0531a',\r\n    },\r\n});\r\n\r\nconst Content = styled.div({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '0 8px 0 4px',\r\n});\r\n\r\nconst CustomTypography = styled(Typography)({\r\n    lineHeight: 1,\r\n    paddingLeft: 10,\r\n});\r\n\r\nconst CustomAvatar = styled(Avatar)({\r\n    height: 24,\r\n    width: 24,\r\n});\r\n\r\nconst CustomDrawer = styled(Drawer)({\r\n    width: '21.7%',\r\n});\r\n\r\nconst CustomListItemText = styled(ListItemText)({\r\n    padding: '0 7px',\r\n});\r\n\r\nconst SideBar: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { data } = useSelector(appSelector);\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [category__, setCategory] = useState<number>(0);\r\n    const [subcategory__, setSubcategory] = useState<number>(0);\r\n\r\n    const showProducts = (\r\n        category_name: string,\r\n        subcategory_name: string,\r\n        subcategory_id: number\r\n    ) => {\r\n        if (subcategory_name) {\r\n            Promise.resolve(\r\n                dispatch(getProducts(subcategory_id))\r\n            ).then((res: any) =>\r\n                history.push(\r\n                    `/tienda/${data.marketSelected?.shortcut}/${category_name}/${subcategory_name}`,\r\n                    res.payload.products\r\n                )\r\n            );\r\n        } else {\r\n            Promise.resolve(\r\n                dispatch(getCategoryProducts(category__))\r\n            ).then((res: any) =>\r\n                history.push(\r\n                    `/tienda/${data.marketSelected?.shortcut}/${category_name}`,\r\n                    res.payload.categoryProducts\r\n                )\r\n            );\r\n        }\r\n\r\n        dispatch(\r\n            setData({\r\n                isSideBarOpen: false,\r\n            })\r\n        );\r\n    };\r\n\r\n    const setHeaderFontColor = () => {\r\n        const res =\r\n            data.marketSelected?.color !== '255,255,255'\r\n                ? { color: 'white' }\r\n                : { color: 'black' };\r\n        return res;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {data.marketCategories?.status === 'OK' && (\r\n                <CustomDrawer\r\n                    open={data.isSideBarOpen}\r\n                    onClose={() =>\r\n                        dispatch(\r\n                            setData({\r\n                                isSideBarOpen: false,\r\n                            })\r\n                        )\r\n                    }\r\n                >\r\n                    <AppBar\r\n                        position=\"sticky\"\r\n                        style={{\r\n                            backgroundColor: `rgb(${data.marketSelected?.color})`,\r\n                        }}\r\n                    >\r\n                        <Toolbar style={setHeaderFontColor()}>\r\n                            <CustomAvatar\r\n                                alt={data.marketSelected?.name}\r\n                                src={data.marketSelected?.icon}\r\n                            />\r\n                            <Content>\r\n                                <CustomTypography variant=\"h6\">\r\n                                    {data.marketSelected?.name}\r\n                                </CustomTypography>\r\n                                <CustomTypography variant=\"caption\">\r\n                                    Comprando en {data.postalCode}\r\n                                </CustomTypography>\r\n                            </Content>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => {\r\n                                    dispatch(\r\n                                        setData({\r\n                                            isSideBarOpen: false,\r\n                                        })\r\n                                    );\r\n                                    history.push(routes.marketList);\r\n                                }}\r\n                            >\r\n                                Cambiar\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <div role=\"presentation\">\r\n                        <List>\r\n                            {data.marketCategories?.categories.map(category => (\r\n                                <>\r\n                                    <CustomListItem\r\n                                        disableRipple\r\n                                        button\r\n                                        key={category.id}\r\n                                        onClick={() => {\r\n                                            setOpen(!open);\r\n                                            setCategory(\r\n                                                category__ === category.id\r\n                                                    ? 0\r\n                                                    : category.id\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        <CustomAvatar\r\n                                            alt={category.name}\r\n                                            src={category.icon}\r\n                                        />\r\n                                        <CustomListItemText\r\n                                            primary={category.name}\r\n                                        />\r\n                                        {category.id === category__ && (\r\n                                            <ExpandLess color=\"action\" />\r\n                                        )}\r\n                                    </CustomListItem>\r\n                                    <Divider\r\n                                        variant=\"middle\"\r\n                                        key={'divider' + category.id}\r\n                                    />\r\n                                    <Collapse\r\n                                        key={category.id + 1000}\r\n                                        in={category.id === category__}\r\n                                        timeout=\"auto\"\r\n                                        unmountOnExit\r\n                                    >\r\n                                        <CustomList disablePadding>\r\n                                            <ListItem\r\n                                                button\r\n                                                onClick={() => {\r\n                                                    showProducts(\r\n                                                        category.shortcut,\r\n                                                        '',\r\n                                                        category.id\r\n                                                    );\r\n                                                    setSubcategory(category.id);\r\n                                                }}\r\n                                            >\r\n                                                <ListItemText\r\n                                                    primary={\r\n                                                        'Ver toda la sección'\r\n                                                    }\r\n                                                />\r\n                                                {subcategory__ ===\r\n                                                    category.id && (\r\n                                                    <Check color=\"action\" />\r\n                                                )}\r\n                                            </ListItem>\r\n                                            <Divider variant=\"middle\" />\r\n                                            {category.categories.map(\r\n                                                subcategory => (\r\n                                                    <>\r\n                                                        <ListItem\r\n                                                            button\r\n                                                            key={subcategory.id}\r\n                                                            onClick={() => {\r\n                                                                showProducts(\r\n                                                                    category.shortcut,\r\n                                                                    subcategory.shortcut,\r\n                                                                    subcategory.id\r\n                                                                );\r\n                                                                setSubcategory(\r\n                                                                    subcategory.id\r\n                                                                );\r\n                                                            }}\r\n                                                        >\r\n                                                            <CustomAvatar\r\n                                                                alt={\r\n                                                                    subcategory.name\r\n                                                                }\r\n                                                                src={\r\n                                                                    subcategory.icon\r\n                                                                }\r\n                                                            />\r\n                                                            <CustomListItemText\r\n                                                                primary={\r\n                                                                    subcategory.name\r\n                                                                }\r\n                                                            />\r\n                                                            {subcategory.id ===\r\n                                                                subcategory__ && (\r\n                                                                <Check color=\"action\" />\r\n                                                            )}\r\n                                                        </ListItem>\r\n                                                        <Divider variant=\"middle\" />\r\n                                                    </>\r\n                                                )\r\n                                            )}\r\n                                        </CustomList>\r\n                                    </Collapse>\r\n                                </>\r\n                            ))}\r\n                        </List>\r\n                    </div>\r\n                </CustomDrawer>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n} from '@material-ui/core';\r\nimport { appSelector, setData } from 'store/AppSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport routes from 'config/routes';\r\n\r\nconst AppDialog: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { data } = useSelector(appSelector);\r\n\r\n    const closeDialog = () => {\r\n        !data.isDialogOpen.dialogTitle && history.push(routes.home);\r\n        dispatch(\r\n            setData({\r\n                isDialogOpen: {\r\n                    show: false,\r\n                    dialogMsg: '',\r\n                    dialogTitle: undefined,\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={data.isDialogOpen.show}\r\n                onClose={closeDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {data?.isDialogOpen?.dialogTitle}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {data?.isDialogOpen?.dialogMsg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"primary\">\r\n                        Aceptar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppDialog;\r\n","import React, { FC } from 'react';\r\n\r\nimport Providers from 'components/Providers';\r\nimport Router from 'components/Router';\r\nimport AppBar from './AppBar';\r\nimport SideBar from 'components/App/Sidebar';\r\nimport AppDialog from 'components/App/AppDialog';\r\n\r\nconst App: FC = () => {\r\n    return (\r\n        <Providers>\r\n            <AppBar />\r\n            <SideBar />\r\n            <AppDialog />\r\n            <Router />\r\n        </Providers>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport '@emotion/core';\r\nimport 'styles.css';\r\n\r\nimport App from 'components/App';\r\n\r\nconst rootElement = document.getElementById('root');\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}