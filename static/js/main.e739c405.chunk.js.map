{"version":3,"sources":["config/theme.ts","config/apiClient.ts","config/fetcher.ts","store/AppSlice.ts","store/index.ts","components/Providers/Providers.tsx","config/routes.ts","assets/images/shop-desktop.png","assets/images/shop-mobile.png","components/Pages/Home.tsx","components/Pages/MarketsList.tsx","components/Pages/CategoryProductsList.tsx","components/Router/Router.tsx","components/App/AppBar.tsx","components/App/Sidebar.tsx","components/App/AppDialog.tsx","components/App/App.tsx","index.tsx"],"names":["baseTheme","createMuiTheme","theme","responsiveFontSizes","apiClient","axios","create","baseURL","paramsSerializer","params","qs","stringify","arrayFormat","fetcher","url","get","then","response","data","appSlice","createSlice","name","initialState","isSideBarOpen","isDialogOpen","show","dialogMsg","asyncLoading","asyncError","reducers","asyncStart","state","asyncSuccess","payload","actions","appSelector","appStore","getMarkets","dispatch","getstate","a","token","postalcode","postalCode","status","markets","error","message","setData","marketSelected","getProducts","category_id","getState","company_id","id","products","store","configureStore","reducer","appSliceReducer","Providers","children","CssBaseline","routes","home","marketList","marketId","productList","categoryProductList","InputButton","styled","div","margin","padding","border","display","width","borderRadius","boxShadow","CustomButton","Button","height","CustomGrid","Grid","CustomCardMedia","CardMedia","backgroundSize","Home","history","useHistory","useDispatch","useState","setPostalCode","useEffect","console","log","ShopDesktop","ShopMobile","container","justify","direction","alignItems","item","sm","xs","Typography","variant","align","TextField","label","required","onChange","event","target","value","color","disabled","length","test","onClick","push","className","src","window","screen","title","ImgContainer","justifyContent","CustomCard","Card","minHeight","flexDirection","cursor","Container","CustomCardContent","CardContent","ProgressGrid","MarketList","useSelector","showMarketCategories","market","marketCategories","shortcut","cards","document","getElementsByClassName","Array","from","forEach","element","style","currentTarget","paragraph","spacing","services","map","lg","md","alt","logotype","delivery","alignContent","CircularProgress","CategoryGrid","CategoryTypography","borderBottom","ProductsGrid","paddingTop","CategoryProductsList","location","useLocation","prodcutView","category","items","Avatar","icon","description","dialogTitle","CardActionArea","image","picture","price","categories","Router","exact","path","to","CustomToolbar","Toolbar","MarketAvatar","AppBar","setInputColor","position","background","startIcon","FormControl","InputLabel","htmlFor","city","toUpperCase","Input","defaultValue","changePostalCode","CustomList","List","CustomListItem","ListItem","Content","CustomTypography","lineHeight","paddingLeft","CustomAvatar","CustomDrawer","Drawer","CustomListItemText","ListItemText","SideBar","open","setOpen","category__","setCategory","subcategory__","setSubcategory","showProducts","category_name","subcategory_name","subcategory_id","Promise","resolve","res","categoryProducts","onClose","backgroundColor","setHeaderFontColor","role","disableRipple","button","primary","ExpandLess","Divider","Collapse","in","timeout","unmountOnExit","disablePadding","Check","subcategory","AppDialog","closeDialog","undefined","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","App","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.e739c405.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\r\n// import { Ubuntu } from './fonts/ubuntu-fonts';\r\n\r\nconst baseTheme = createMuiTheme({});\r\nconst theme = responsiveFontSizes(baseTheme);\r\n\r\nexport default theme;\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'https://api.comprea.com/v7',\r\n    paramsSerializer: params => qs.stringify(params, { arrayFormat: 'comma' }),\r\n});\r\n\r\nexport default apiClient;\r\n","import { AxiosRequestConfig } from 'axios';\r\nimport apiClient from './apiClient';\r\n\r\nexport const fetcher = <T>(\r\n    url: string,\r\n    params?: AxiosRequestConfig['params']\r\n): Promise<T> =>\r\n    apiClient\r\n        .get<T>(url, { params })\r\n        .then(response => response.data);\r\n\r\nexport default fetcher;\r\n","import { fetcher } from 'config/fetcher';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk } from './';\r\nimport {\r\n    CategoriesResponse,\r\n    AppDialogProps,\r\n    MarketModel,\r\n    CityMarketsModel,\r\n    PostalCodeResponse,\r\n    Products,\r\n    CategoryProductsResponse,\r\n    ProductsResponse,\r\n    SessionTokenResponse,\r\n} from 'models/main';\r\n\r\ninterface AppData {\r\n    postalCode?: number;\r\n    token?: string;\r\n    isSideBarOpen: boolean;\r\n    markets?: CityMarketsModel;\r\n    isDialogOpen: AppDialogProps;\r\n    marketCategories?: CategoriesResponse;\r\n    marketSelected?: MarketModel;\r\n    products?: Products;\r\n    categoryProducts?: CategoryProductsResponse;\r\n}\r\n\r\nexport interface AppState {\r\n    data: AppData;\r\n    asyncLoading: boolean;\r\n    asyncError: string;\r\n}\r\n\r\nconst initialState: AppState = {\r\n    data: {\r\n        isSideBarOpen: false,\r\n        isDialogOpen: { show: false, dialogMsg: '' },\r\n    },\r\n    asyncLoading: false,\r\n    asyncError: '',\r\n};\r\n\r\nconst appSlice = createSlice({\r\n    name: 'app',\r\n    initialState,\r\n    reducers: {\r\n        asyncStart: state => ({\r\n            ...state,\r\n            asyncLoading: true,\r\n        }),\r\n        asyncSuccess: (\r\n            state,\r\n            { payload }: PayloadAction<{ [key: string]: any }>\r\n        ) => ({\r\n            ...state,\r\n            asyncLoading: false,\r\n            data: {\r\n                ...state.data,\r\n                ...payload,\r\n            },\r\n        }),\r\n        asyncError: (state, { payload }: PayloadAction<string>) => ({\r\n            ...state,\r\n            asyncLoading: false,\r\n            asyncError: payload,\r\n        }),\r\n    },\r\n});\r\n\r\nexport const { asyncStart, asyncSuccess, asyncError } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n\r\nexport const appSelector = (state: { appStore: AppState }) => state.appStore;\r\n\r\nexport const getToken = (): AppThunk => {\r\n    return async dispatch => {\r\n        dispatch(asyncStart());\r\n\r\n        try {\r\n            const data: SessionTokenResponse = await fetcher('/user/session');\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        token: data.token,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const getMarkets = (): AppThunk => {\r\n    return async (dispatch, getstate) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getstate();\r\n        try {\r\n            const data: PostalCodeResponse = await fetcher('/user/postalcode', {\r\n                token: state.appStore.data.token,\r\n                postalcode: state.appStore.data.postalCode,\r\n            });\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        markets: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n            dispatch(setData({ postalCode: '' }));\r\n            dispatch(setData({ marketSelected: '' }));\r\n        }\r\n    };\r\n};\r\n\r\nexport const getMarketCategories = (): AppThunk => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getState();\r\n        try {\r\n            const data: CategoriesResponse = await fetcher(\r\n                '/company/categories',\r\n                {\r\n                    token: state.appStore.data.token,\r\n                    company_id: state.appStore.data.marketSelected?.id,\r\n                }\r\n            );\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        marketCategories: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const getProducts = (category_id: number): AppThunk => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getState();\r\n        try {\r\n            const data: ProductsResponse = await fetcher('/company/items', {\r\n                token: state.appStore.data.token,\r\n                company_id: state.appStore.data.marketSelected?.id,\r\n                category_id: category_id,\r\n            });\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        products: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const getCategoryProducts = (category_id: number): AppThunk => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(asyncStart());\r\n        const state: any = getState();\r\n        try {\r\n            const data: ProductsResponse = await fetcher('/company/featured', {\r\n                token: state.appStore.data.token,\r\n                company_id: state.appStore.data.marketSelected?.id,\r\n                category_id: category_id,\r\n            });\r\n            if (data.status === 'OK') {\r\n                return dispatch(\r\n                    asyncSuccess({\r\n                        categoryProducts: data,\r\n                    })\r\n                );\r\n            } else {\r\n                throw data.error.message;\r\n            }\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n            dispatch(\r\n                setData({ isDialogOpen: { show: true, dialogMsg: error } })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const setData = <T>(data: { [key: string]: T }): AppThunk => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(asyncSuccess(data));\r\n        } catch (error) {\r\n            dispatch(asyncError(error));\r\n        }\r\n    };\r\n};\r\n","import { configureStore, Action } from '@reduxjs/toolkit';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { AppState } from './AppSlice';\r\nimport appSliceReducer from './AppSlice';\r\n\r\nexport type AppThunk = ThunkAction<\r\n    void,\r\n    {\r\n        appState: AppState;\r\n    },\r\n    unknown,\r\n    Action<string>\r\n>;\r\n// TODO cambiar el any\r\nconst store: any = configureStore({\r\n    reducer: {\r\n        appStore: appSliceReducer,\r\n    },\r\n});\r\n\r\nexport default store;\r\n","import { CssBaseline, MuiThemeProvider } from '@material-ui/core';\r\nimport { ThemeProvider as EmotionThemeProvider } from 'emotion-theming';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport React, { FC } from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport theme from '../../config/theme';\r\nimport store from 'store';\r\n\r\nconst Providers: FC = ({ children }) => (\r\n    <EmotionThemeProvider theme={theme}>\r\n        <MuiThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Provider store={store}>\r\n                <BrowserRouter>{children}</BrowserRouter>\r\n            </Provider>\r\n        </MuiThemeProvider>\r\n    </EmotionThemeProvider>\r\n);\r\n\r\n<h1>Hola</h1>;\r\n\r\nexport default Providers;\r\n","const routes = {\r\n    home: '/',\r\n    marketList: '/tienda',\r\n    marketId: '/tienda/:id',\r\n    productList: '/tienda/:id/:categoryId/:subcategoryId',\r\n    categoryProductList: '/tienda/:id/:categoryId/',\r\n};\r\n\r\nexport type Routes = typeof routes;\r\n\r\nexport default routes;\r\n","export default __webpack_public_path__ + \"static/media/shop-desktop.22b2e777.png\";","export default __webpack_public_path__ + \"static/media/shop-mobile.2bb48685.png\";","import styled from '@emotion/styled';\r\nimport {\r\n    Button,\r\n    CardMedia,\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport routes from 'config/routes';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getMarkets, getToken, setData } from 'store/AppSlice';\r\nimport ShopDesktop from './../../assets/images/shop-desktop.png';\r\nimport ShopMobile from './../../assets/images/shop-mobile.png';\r\n\r\nconst InputButton = styled.div({\r\n    margin: 15,\r\n    padding: 7,\r\n    border: 'solid 3px #3f51b5',\r\n    display: 'flex',\r\n    width: 'fit-content',\r\n    borderRadius: 7,\r\n    boxShadow: '0 0 450px #f50057',\r\n});\r\n\r\nconst CustomButton = styled(Button)({\r\n    height: 48,\r\n});\r\n\r\nconst CustomGrid = styled(Grid)({\r\n    height: 'calc(100vh - 86px)',\r\n});\r\n\r\nconst CustomCardMedia = styled(CardMedia)({\r\n    width: '100%',\r\n    backgroundSize: 'contain',\r\n});\r\n\r\nconst Home: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [postalCode, setPostalCode] = useState<string>('');\r\n\r\n    const getMarketsAction = () => {\r\n        dispatch(\r\n            setData({\r\n                postalCode: postalCode,\r\n            })\r\n        );\r\n        dispatch(getMarkets());\r\n        history.push(routes.marketList);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(ShopDesktop, ShopMobile);\r\n        dispatch(getToken());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <CustomGrid container justify=\"center\">\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                item\r\n                sm={6}\r\n                xs={12}\r\n            >\r\n                <Typography variant=\"h2\" align=\"center\">\r\n                    ¡Quédate en casa! <br /> Nosotros te <br /> hacemos la\r\n                    compra\r\n                </Typography>\r\n                <InputButton>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        label=\"Código postal\"\r\n                        required\r\n                        onChange={(\r\n                            event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => setPostalCode(event.target.value)}\r\n                    />\r\n\r\n                    <CustomButton\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        disabled={\r\n                            !postalCode.length || !/^[0-9]{5}$/.test(postalCode)\r\n                        }\r\n                        onClick={getMarketsAction}\r\n                    >\r\n                        ¡HACER LA COMPRA!\r\n                    </CustomButton>\r\n                </InputButton>\r\n            </Grid>\r\n            <Grid container item sm={6} xs={12}>\r\n                <CustomCardMedia\r\n                    className=\"Comprar\"\r\n                    src={\r\n                        window.window.screen.width < 450\r\n                            ? ShopMobile\r\n                            : ShopDesktop\r\n                    }\r\n                    title=\"shopping\"\r\n                />\r\n            </Grid>\r\n        </CustomGrid>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CircularProgress,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { MarketModel, MarketServiceModel } from 'models/main';\r\nimport React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { appSelector, getMarketCategories, setData } from 'store/AppSlice';\r\n\r\nconst ImgContainer = styled.div({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 18,\r\n});\r\n\r\nconst CustomCard = styled(Card)({\r\n    width: '100%',\r\n    minHeight: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n});\r\n\r\nconst CustomGrid = styled(Grid)({\r\n    '&:hover': {\r\n        boxShadow: '0 1px 8px #b5b5b5',\r\n    },\r\n    '&:active': {\r\n        boxShadow: 'inset 0 0 12px #b5b5b5',\r\n    },\r\n});\r\n\r\nconst Container = styled.div({\r\n    padding: '25px 50px',\r\n});\r\n\r\nconst CustomCardContent = styled(CardContent)({\r\n    width: '100%',\r\n    padding: '0 16px 16px',\r\n});\r\n\r\nconst ProgressGrid = styled(Grid)({\r\n    height: '80vh',\r\n});\r\n\r\nconst MarketList: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { data } = useSelector(appSelector);\r\n\r\n    const showMarketCategories = (event: any, market: MarketModel) => {\r\n        dispatch(\r\n            setData({\r\n                marketSelected: market,\r\n            })\r\n        );\r\n        dispatch(getMarketCategories());\r\n        history.push(`/tienda/${market.shortcut}`);\r\n        const cards = document.getElementsByClassName('MuiCard-root');\r\n        Array.from(cards).forEach(\r\n            (element: any) => (element.style.boxShadow = 'none')\r\n        );\r\n        event.currentTarget.style.boxShadow = `0 0 0 2px rgb(${\r\n            market.color !== '255,255,255' ? market.color : '61,86,186'\r\n        })`;\r\n    };\r\n\r\n    return data.markets?.status === 'OK' ? (\r\n        <Container>\r\n            <Typography variant=\"h4\" align=\"center\" paragraph>\r\n                ¿Dónde quieres comprar?\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                {data.markets?.services.map((services: MarketServiceModel) =>\r\n                    services.markets.map((market: MarketModel) => (\r\n                        <CustomGrid\r\n                            key={market.id}\r\n                            container\r\n                            item\r\n                            lg={2}\r\n                            md={3}\r\n                            sm={6}\r\n                            xs={12}\r\n                        >\r\n                            <CustomCard\r\n                                onClick={event => {\r\n                                    showMarketCategories(event, market);\r\n                                }}\r\n                            >\r\n                                <ImgContainer>\r\n                                    <img\r\n                                        alt={market.name}\r\n                                        src={market.logotype}\r\n                                    />\r\n                                </ImgContainer>\r\n                                <CustomCardContent>\r\n                                    <Typography\r\n                                        color=\"textSecondary\"\r\n                                        align=\"right\"\r\n                                        variant=\"subtitle2\"\r\n                                    >\r\n                                        {services.delivery}\r\n                                    </Typography>\r\n                                </CustomCardContent>\r\n                            </CustomCard>\r\n                        </CustomGrid>\r\n                    ))\r\n                )}\r\n            </Grid>\r\n        </Container>\r\n    ) : (\r\n        <ProgressGrid container justify=\"center\" alignContent=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">\r\n                <CircularProgress color=\"secondary\" />\r\n                Cargando...\r\n            </Typography>\r\n        </ProgressGrid>\r\n    );\r\n};\r\n\r\nexport default MarketList;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { Category, Item, Category_C, Item2 } from 'models/main';\r\nimport React, { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { setData } from 'store/AppSlice';\r\n\r\nconst Container = styled.div({\r\n    padding: '50px',\r\n});\r\n\r\nconst CategoryGrid = styled(Grid)({\r\n    padding: '50px 0 30px',\r\n});\r\n\r\nconst CategoryTypography = styled(Typography)({\r\n    width: '95%',\r\n    borderBottom: '1px solid #6ad76e',\r\n});\r\n\r\nconst ProductsGrid = styled(Grid)({\r\n    padding: '0 50px',\r\n});\r\n\r\nconst CustomCard = styled(Card)({\r\n    width: '100%',\r\n    padding: 15,\r\n    cursor: 'pointer',\r\n});\r\n\r\nconst CustomCardMedia = styled(CardMedia)({\r\n    height: 140,\r\n    backgroundSize: 'contain',\r\n});\r\n\r\nconst CustomCardContent = styled(CardContent)({\r\n    paddingTop: 30,\r\n});\r\n\r\nconst ProgressGrid = styled(Grid)({\r\n    height: '80vh',\r\n});\r\n\r\nconst CategoryProductsList: FC = () => {\r\n    const location = useLocation<any>();\r\n    const dispatch = useDispatch();\r\n\r\n    const showDetails = (data: string) => {\r\n        dispatch(\r\n            setData({\r\n                isDialogOpen: {\r\n                    show: true,\r\n                    dialogMsg: data,\r\n                    dialogTitle: 'PRODUCTO',\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    const prodcutView = (category: Category_C | Category, items: any) => {\r\n        return (\r\n            <>\r\n                <CategoryGrid container alignItems=\"center\">\r\n                    <Avatar src={category.icon} />\r\n                    <CategoryTypography variant=\"h6\">\r\n                        {category.name}\r\n                    </CategoryTypography>\r\n                </CategoryGrid>\r\n                <ProductsGrid container spacing={3}>\r\n                    {items.map((item: Item2 | Item) => (\r\n                        <Grid\r\n                            container\r\n                            item\r\n                            lg={2}\r\n                            md={3}\r\n                            sm={6}\r\n                            xs={12}\r\n                            direction=\"column\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <CustomCard\r\n                                onClick={() => showDetails(item.description)}\r\n                            >\r\n                                <CardActionArea>\r\n                                    <CustomCardMedia\r\n                                        title={item.name}\r\n                                        image={item.picture}\r\n                                    />\r\n                                    <CustomCardContent>\r\n                                        <Typography align=\"right\">\r\n                                            {item.price} €\r\n                                        </Typography>\r\n                                        <div>\r\n                                            <Typography align=\"left\">\r\n                                                {item.name}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </CustomCardContent>\r\n                                </CardActionArea>\r\n                            </CustomCard>\r\n                        </Grid>\r\n                    ))}\r\n                </ProductsGrid>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return location.state ? (\r\n        <Container>\r\n            {location.state.categories\r\n                ? location.state.categories.map((category: Category_C) =>\r\n                      prodcutView(category, category.items)\r\n                  )\r\n                : prodcutView(\r\n                      location.state.items[0].category,\r\n                      location.state.items\r\n                  )}\r\n        </Container>\r\n    ) : (\r\n        <ProgressGrid container justify=\"center\" alignContent=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">\r\n                <CircularProgress color=\"secondary\" />\r\n                Cargando...\r\n            </Typography>\r\n        </ProgressGrid>\r\n    );\r\n};\r\n\r\nexport default CategoryProductsList;\r\n","import Home from 'components/Pages/Home';\r\nimport MarketList from 'components/Pages/MarketsList';\r\nimport CategoryProductsList from 'components/Pages/CategoryProductsList';\r\nimport React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport routes from '../../config/routes';\r\n\r\nconst Router = (): JSX.Element => (\r\n    <Switch>\r\n        <Route exact path={routes.home}>\r\n            <Home />\r\n        </Route>\r\n        <Route exact path={routes.marketList}>\r\n            <MarketList />\r\n        </Route>\r\n        <Route exact path={routes.marketId}>\r\n            <MarketList />\r\n        </Route>\r\n        <Route exact path={routes.productList}>\r\n            <CategoryProductsList />\r\n        </Route>\r\n        <Route exact path={routes.categoryProductList}>\r\n            <CategoryProductsList />\r\n        </Route>\r\n        <Redirect to={routes.home} />\r\n    </Switch>\r\n);\r\n\r\nexport default Router;\r\n","import styled from '@emotion/styled';\r\nimport {\r\n    AppBar as MuiAppBar,\r\n    Avatar,\r\n    Button,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { appSelector, getMarkets, setData } from 'store/AppSlice';\r\n\r\nconst CustomToolbar = styled(Toolbar)({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n});\r\n\r\nconst MarketAvatar = styled(Avatar)({\r\n    height: 35,\r\n    width: 35,\r\n});\r\n\r\nconst AppBar: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { data } = useSelector(appSelector);\r\n\r\n    const changePostalCode = (value: string) => {\r\n        dispatch(setData({ postalCode: value }));\r\n        dispatch(getMarkets());\r\n    };\r\n\r\n    const validatePostalCode = (value: string) => /^[0-9]{5}$/.test(value);\r\n\r\n    const setInputColor = () => {\r\n        const res =\r\n            data.marketSelected?.color !== '255,255,255'\r\n                ? { color: 'white' }\r\n                : { color: 'black' };\r\n        return res;\r\n    };\r\n\r\n    return (\r\n        <MuiAppBar\r\n            position=\"sticky\"\r\n            style={{ background: `rgb(${data.marketSelected?.color})` }}\r\n        >\r\n            <CustomToolbar color=\"inherit\">\r\n                <div>\r\n                    {data.marketSelected && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            startIcon={\r\n                                <MarketAvatar\r\n                                    alt={data.marketSelected?.name}\r\n                                    src={data.marketSelected?.icon}\r\n                                />\r\n                            }\r\n                            onClick={() =>\r\n                                dispatch(\r\n                                    setData({\r\n                                        isSideBarOpen: true,\r\n                                    })\r\n                                )\r\n                            }\r\n                        >\r\n                            <Typography variant=\"h6\">CATEGORÍAS</Typography>\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n                {data.postalCode && (\r\n                    <FormControl>\r\n                        <InputLabel\r\n                            style={setInputColor()}\r\n                            htmlFor=\"edit-postalCode\"\r\n                        >\r\n                            {data.markets?.city.toUpperCase()}\r\n                        </InputLabel>\r\n                        <Input\r\n                            color=\"secondary\"\r\n                            style={setInputColor()}\r\n                            id=\"edit-postalCode\"\r\n                            defaultValue={data.postalCode}\r\n                            required\r\n                            onChange={event =>\r\n                                validatePostalCode(event.target.value) &&\r\n                                changePostalCode(event.target.value)\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                )}\r\n            </CustomToolbar>\r\n        </MuiAppBar>\r\n    );\r\n};\r\n\r\nexport default AppBar;\r\n","import React, { FC, useState } from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    AppBar,\r\n    Avatar,\r\n    Button,\r\n    Collapse,\r\n    Divider,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport styled from '@emotion/styled';\r\nimport {\r\n    appSelector,\r\n    getCategoryProducts,\r\n    getProducts,\r\n    setData,\r\n} from 'store/AppSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Check, ExpandLess } from '@material-ui/icons';\r\nimport routes from 'config/routes';\r\n\r\nconst CustomList = styled(List)({\r\n    background: '#f5f5f5',\r\n});\r\n\r\nconst CustomListItem = styled(ListItem)({\r\n    '&:hover': {\r\n        background: '#f5f5f5',\r\n    },\r\n    '&:active': {\r\n        background: '#4fd0531a',\r\n    },\r\n});\r\n\r\nconst Content = styled.div({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '0 8px 0 4px',\r\n});\r\n\r\nconst CustomTypography = styled(Typography)({\r\n    lineHeight: 1,\r\n    paddingLeft: 10,\r\n});\r\n\r\nconst CustomAvatar = styled(Avatar)({\r\n    height: 24,\r\n    width: 24,\r\n});\r\n\r\nconst CustomDrawer = styled(Drawer)({\r\n    width: '21.7%',\r\n});\r\n\r\nconst CustomListItemText = styled(ListItemText)({\r\n    padding: '0 7px',\r\n});\r\n\r\nconst SideBar: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { data } = useSelector(appSelector);\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [category__, setCategory] = useState<number>(0);\r\n    const [subcategory__, setSubcategory] = useState<number>(0);\r\n\r\n    const showProducts = (\r\n        category_name: string,\r\n        subcategory_name: string,\r\n        subcategory_id: number\r\n    ) => {\r\n        if (subcategory_name) {\r\n            console.log(dispatch(getProducts(subcategory_id)));\r\n            Promise.resolve(dispatch(getProducts(subcategory_id))).then(\r\n                (res: any) => {\r\n                    console.log(res);\r\n                    history.push(\r\n                        `/tienda/${data.marketSelected?.shortcut}/${category_name}/${subcategory_name}`,\r\n                        res.payload.products\r\n                    );\r\n                }\r\n            );\r\n        } else {\r\n            Promise.resolve(\r\n                dispatch(getCategoryProducts(category__))\r\n            ).then((res: any) =>\r\n                history.push(\r\n                    `/tienda/${data.marketSelected?.shortcut}/${category_name}`,\r\n                    res.payload.categoryProducts\r\n                )\r\n            );\r\n        }\r\n\r\n        dispatch(\r\n            setData({\r\n                isSideBarOpen: false,\r\n            })\r\n        );\r\n    };\r\n\r\n    const setHeaderFontColor = () => {\r\n        const res =\r\n            data.marketSelected?.color !== '255,255,255'\r\n                ? { color: 'white' }\r\n                : { color: 'black' };\r\n        return res;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {data.marketCategories?.status === 'OK' && (\r\n                <CustomDrawer\r\n                    open={data.isSideBarOpen}\r\n                    onClose={() =>\r\n                        dispatch(\r\n                            setData({\r\n                                isSideBarOpen: false,\r\n                            })\r\n                        )\r\n                    }\r\n                >\r\n                    <AppBar\r\n                        position=\"sticky\"\r\n                        style={{\r\n                            backgroundColor: `rgb(${data.marketSelected?.color})`,\r\n                        }}\r\n                    >\r\n                        <Toolbar style={setHeaderFontColor()}>\r\n                            <CustomAvatar\r\n                                alt={data.marketSelected?.name}\r\n                                src={data.marketSelected?.icon}\r\n                            />\r\n                            <Content>\r\n                                <CustomTypography variant=\"h6\">\r\n                                    {data.marketSelected?.name}\r\n                                </CustomTypography>\r\n                                <CustomTypography variant=\"caption\">\r\n                                    Comprando en {data.postalCode}\r\n                                </CustomTypography>\r\n                            </Content>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={() => {\r\n                                    dispatch(\r\n                                        setData({\r\n                                            isSideBarOpen: false,\r\n                                        })\r\n                                    );\r\n                                    history.push(routes.marketList);\r\n                                }}\r\n                            >\r\n                                Cambiar\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <div role=\"presentation\">\r\n                        <List>\r\n                            {data.marketCategories?.categories.map(category => (\r\n                                <>\r\n                                    <CustomListItem\r\n                                        disableRipple\r\n                                        button\r\n                                        key={category.id}\r\n                                        onClick={() => {\r\n                                            setOpen(!open);\r\n                                            setCategory(\r\n                                                category__ === category.id\r\n                                                    ? 0\r\n                                                    : category.id\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        <CustomAvatar\r\n                                            alt={category.name}\r\n                                            src={category.icon}\r\n                                        />\r\n                                        <CustomListItemText\r\n                                            primary={category.name}\r\n                                        />\r\n                                        {category.id === category__ && (\r\n                                            <ExpandLess color=\"action\" />\r\n                                        )}\r\n                                    </CustomListItem>\r\n                                    <Divider\r\n                                        variant=\"middle\"\r\n                                        key={'divider' + category.id}\r\n                                    />\r\n                                    <Collapse\r\n                                        key={category.id + 1000}\r\n                                        in={category.id === category__}\r\n                                        timeout=\"auto\"\r\n                                        unmountOnExit\r\n                                    >\r\n                                        <CustomList disablePadding>\r\n                                            <ListItem\r\n                                                button\r\n                                                onClick={() => {\r\n                                                    showProducts(\r\n                                                        category.shortcut,\r\n                                                        '',\r\n                                                        category.id\r\n                                                    );\r\n                                                    setSubcategory(category.id);\r\n                                                }}\r\n                                            >\r\n                                                <ListItemText\r\n                                                    primary={\r\n                                                        'Ver toda la sección'\r\n                                                    }\r\n                                                />\r\n                                                {subcategory__ ===\r\n                                                    category.id && (\r\n                                                    <Check color=\"action\" />\r\n                                                )}\r\n                                            </ListItem>\r\n                                            <Divider variant=\"middle\" />\r\n                                            {category.categories.map(\r\n                                                subcategory => (\r\n                                                    <>\r\n                                                        <ListItem\r\n                                                            button\r\n                                                            key={subcategory.id}\r\n                                                            onClick={() => {\r\n                                                                showProducts(\r\n                                                                    category.shortcut,\r\n                                                                    subcategory.shortcut,\r\n                                                                    subcategory.id\r\n                                                                );\r\n                                                                setSubcategory(\r\n                                                                    subcategory.id\r\n                                                                );\r\n                                                            }}\r\n                                                        >\r\n                                                            <CustomAvatar\r\n                                                                alt={\r\n                                                                    subcategory.name\r\n                                                                }\r\n                                                                src={\r\n                                                                    subcategory.icon\r\n                                                                }\r\n                                                            />\r\n                                                            <CustomListItemText\r\n                                                                primary={\r\n                                                                    subcategory.name\r\n                                                                }\r\n                                                            />\r\n                                                            {subcategory.id ===\r\n                                                                subcategory__ && (\r\n                                                                <Check color=\"action\" />\r\n                                                            )}\r\n                                                        </ListItem>\r\n                                                        <Divider variant=\"middle\" />\r\n                                                    </>\r\n                                                )\r\n                                            )}\r\n                                        </CustomList>\r\n                                    </Collapse>\r\n                                </>\r\n                            ))}\r\n                        </List>\r\n                    </div>\r\n                </CustomDrawer>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { FC } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n} from '@material-ui/core';\r\nimport { appSelector, setData } from 'store/AppSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport routes from 'config/routes';\r\n\r\nconst AppDialog: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { data } = useSelector(appSelector);\r\n\r\n    const closeDialog = () => {\r\n        !data.isDialogOpen.dialogTitle && history.push(routes.home);\r\n        dispatch(\r\n            setData({\r\n                isDialogOpen: {\r\n                    show: false,\r\n                    dialogMsg: '',\r\n                    dialogTitle: undefined,\r\n                },\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={data.isDialogOpen.show}\r\n                onClose={closeDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {data?.isDialogOpen?.dialogTitle}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {data?.isDialogOpen?.dialogMsg}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"primary\">\r\n                        Aceptar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppDialog;\r\n","import React, { FC } from 'react';\r\n\r\nimport Providers from 'components/Providers';\r\nimport Router from 'components/Router';\r\nimport AppBar from './AppBar';\r\nimport SideBar from 'components/App/Sidebar';\r\nimport AppDialog from 'components/App/AppDialog';\r\n\r\nconst App: FC = () => {\r\n    return (\r\n        <Providers>\r\n            <AppBar />\r\n            <SideBar />\r\n            <AppDialog />\r\n            <Router />\r\n        </Providers>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport '@emotion/core';\r\nimport 'styles.css';\r\n\r\nimport App from 'components/App';\r\n\r\nconst rootElement = document.getElementById('root');\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}